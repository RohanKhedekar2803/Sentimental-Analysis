# -*- coding: utf-8 -*-
"""sentimental_analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OcFCu3kns98wCOXG3LkmSziYOucA9Ldj
"""

!pip install turicreate 
import turicreate as tc
from turicreate import SFrame

sf=tc.SFrame('AllProductReviews.csv')

sf.head(2)

"""# **adding  word count vector**"""

sf['word_count']=tc.text_analytics.count_words(sf['ReviewBody'])

sf.head(10)

sf['Product'].show()

boat_review=sf[sf['Product']=='boAt Rockerz 255']
len(boat_review)

jbl_review=sf[sf['Product']=='JBL T110BT']
jbl_review['ReviewStar'].mean()

boat_review['ReviewStar'].mean()
# dir(boat_review['ReviewStar'])

boat_review.head(2)

# jbl_review.head(1)

"""# **building sentimental classifier**"""

boat_review=boat_review[boat_review['ReviewStar']!=3]
# neglected all reviews

# jbl_review=jbl_review[jbl_review['ReviewStar']!=3]

sf['sentiments']=sf['ReviewStar']>=4
sf.head(1)

"""# **training sentimental classifier**"""

# split data
train_data,test_data=sf.random_split(.8,seed=0)

sentimental_model=tc.classifier.create(train_data,target='sentiments',features=['word_count'],validation_set=test_data)

"""# **evaluate model**"""

sentimental_model.evaluate(test_data,metric='confusion_matrix')
# sentimental_model.training_f1_score()

# sentimental_model.evaluate('accuracy')
sentimental_model.evaluate(test_data,metric='accuracy')

# dir(sentimental_model)



"""# **applied learned model to undertsand sentiment of other**"""

jbl_review['predicted_sentiment']=sentimental_model.predict(jbl_review,output_type='margin')

jbl_review=jbl_review.sort('predicted_sentiment',ascending=True)
jbl_review.head(5)

jbl_review.head(5)

jbl_review[0]['ReviewBody']

jbl_review[-1]['ReviewBody']